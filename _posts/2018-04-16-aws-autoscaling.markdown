---
layout: post
title: AWS系列之AutoScaling
date: 2018-04-16 15:32:24.000000000 +09:00
---

这段时间自己在负责公司的网络扩展和机房扩建，从网络拓扑到交换机购置到服务器购买机柜上架什么的，这里面我觉得最最难的就是流量估计了，或者说是业务估计了，因为你要考虑到又不能太浪费，又要有一定的可扩展性，还得符合业务发展需求，这真的是老大难了。你钱花多了，老板不开心；到时候业务扩展，你说没办法扩张，那老板又不开心；你省钱了，业务支撑不顺利，老板也不开心…………

要是自建机房也能自动伸缩，那该多好啊。今天我们就聊聊AWS的自动伸缩服务， 这玩意可厉害了，跟孙悟空的金箍棒似的，要的时候可大，不要的时候可小。

我们上次说ECS的时候就有涉及到它，还记得它在哪里出现么？其实就是在创建cluster的时候出现过，因为创建cluster的时候需要指定EC2使用的AMI , EC2的数量类型等等，AutoScaling是默认配置好的。它可以根据各种metric来自的增加或者减少EC2 的数量。

创建一个Auto Scaling Group首先需要创建一个launch configuration , 用于在需要伸缩的时候指定的一个动作。看看如何创建这个东西就知道这是什么了。

1. 需要选择EC2的AMI ， 如果是用于ECS， 则默认是ecs-optimized
2. EC2类型
3. 存储
4. security group

通过这些可以知道，其实launch configuration就是提前配置好要启用的EC2 的各种参数，然后配置好了launch configuration之后，就可以创建 auto scaling group了。

创建的时候除了要指定autoScalingGroup的名字之外，还需要配置一个期望的数量，就是说期望在这个group里面运行多少EC2 实例，还要配置VPC，包括子网，还有ELB(Elastic Load Balance) ,和CloudWatch监控等等。接下来就是很重要的一步了，选择AutoScaling的policy , 主要有三种

1. Target tracking scaling , 提前定义一个metric指标，比如说CPU使用量，单机请求量等等，只要达到这个指标，就根据launch configuration来增加或者减少EC2 的实例。
2. Step scaling , 这个可以定义多个指标，然后根据不同的指标来增加或者减少实例数量。比如说CPU达到40%，增加一台，达到70% ，增加三台之类的，这个更加灵活，推荐使用。
3. Scheduled scaling , 这是一种周期性的scaling , 应对可以预测的流量高峰，比如说各种节日，流量上涨，我们就可以提前增加机器来提供负载。

至于机器的缩减呢，这个也是根据监控的指标，但是不会那么快速，因为autoscaling的指导原则就是增加的时候快速增加，减少的时候根据需求缓慢减少，避免突然的流量反弹的情况。所以这里有一个叫CoolDown Period的时间限制，单位是秒，如果说刚刚trigger了一个增加，服务增加完了之后这个CoolDown时间就开始计算，如果在这个时间还没结束的时候又来一个trigger要增加，那前面一次增加的服务数量也会算在第二次的增加里面。但是减少的时候有点不一样，服务减少的时候这个时间开始计算，但是如果在这个时间还没结束的时候突然来了一个增加的trigger，那这个增加不需要受这个时间限制，它可以马上增加，不需要等到这个时间结束。