---
layout: post
title: AWS系列之存储
date: 2018-04-12 21:29:24.000000000 +08:00
---

这段时间在学习aws，就打算把自己的学习心得记录下来。aws全称是amazon web service , 其实就是amazon的一个云产品，说是一个产品倒不是很准确了，因为其实有特别多个不同的服务，而且还在不断增加。其产品线从存储到计算，从大数据到AI，方方面面都涉及到了，所以其实很适合很多公司的业务。

今天我就先聊聊存储了，amazon最早的存储产品应该就是s3了，这是一款对象存储服务，英文叫object storage。其实存储主要分三类，块存储（object storage）,文件存储(file storage)和对象存储(object storage)。

1. 块存储，其实是比较底层的了，这里处理的其实就是物理硬盘里的扇区柱面之间的存储。比如说我们电脑配置的硬盘就是块存储，拿到了块存储不能直接用，需要分区啊，格式化啊，挂载（windows不需要）之类的操作才可以往里面读写数据。
2. 文件存储，其实可以看成是块存储上面的已经分区格式化完的一个分区，常见的比如NFS，SMB之类的，像这种一般只要挂载就可以直接读写了。
3. 对象存储呢，我们可以直接看到文件对象，也就是说只要我们有权限就可以直接读写对象存储里的文件，不需要经过什么分区格式化挂载之类的操作。

到了介绍我们今天的主角了，simple storage system， 简称s3 ， 这是aws提供的对象存储服务。它能提供达到１１个９的数据持久性和４个９的可用性，用户只需要在aws里面创建一个存储桶，就可以开始往这个桶里存东西了。但是这里有个概念就是虽然可以把存储桶看成是一个文件夹，但是这个文件夹里面却不支持新建子文件夹，也就是说如果看出一个文件夹的话，那里面所有的文件都必须也只能在这个文件夹的下一级目录里，不存在什么子文件夹之类的东西。

那就有问题了，我怎么区分不同类型的文件呢？在我们常见的文件管理概念里，我们可能会新建一个单一的目录来存放相同类型的文件。但是s3却不支持这个，那该怎么办呢？这里我就要解释一下s3的游戏规则了。

1. bucket , 存储桶，这个可以理解成s3的容器或者说一个大目录，这个桶里面就直接保存着我们的数据，各种文件。默认一个用户最多可以创建100个存储桶。这个桶的名字呢，必须是全局唯一的，因为访问对象的时候需要用到这个桶的路径，所以推荐使用自己的dns域名来命名这个存储桶。
2. region , aws提供了18个region，每个region里面还有好几个available zone。但是一个存储桶只能存储在它创建时的region里，如果你需要跨region提供访问，比如说让其他州的用户能更快的访问更低的延迟，就可以自己去做一个复制，把这个已存在的存储桶里面的对象给replicate到其他区域的存储桶里去。但是需要注意的是，replication之后复制新的对象，也就是说replication之前的对象是不会被复制过去的，这个需要自己再去复制。
3. object ，对象，这个就是我们在s3服务里能操作的最小单位了。它包含两个内容，数据和元数据，数据其实就是文件本身的内容，而元数据则声明了文件相关的一些属性。元数据还有两种，系统元数据，包含了文件大小啊，修改日期，MD5值等等系统所需的数据；另外一个用户元数据，则是用户可以添加标签之类的用于分类的用途之类的。
4. key ,其实这个就是对象的名字。因此在同一个存储桶里面，key是不能相同的，但是不同的存储桶就可以有相同的key .通常辨别一个对象靠的就是存储桶+key+额外的版本号。
5. 访问路径，s3本身的设计目的就是给internet提供存储。因此访问一个s3对象可以直接使用它的url来访问。

上面大概就是一些使用s3时的一些相关概念了，下面再介绍一下一些相关操作。因为s3的设计初衷就是方便网络访问，因此s3也提供了一些restful的api , 主要有下面几种：

1. 创建/删除 一个桶
2. 写入一个对象
3. 读一个对象
4. 删除一个对象
5. 列出桶里的对象

而且它还支持使用https这样的加密方式来保证传输过程中的安全。当然我们也推荐使用https来保证传输数据的安全，并且启用s3的加密功能，来确保s3存储的文件安全。这个存储加密可以在创建桶的时候设置，也可以后期设置，支持使用  AES－256或者KMS管理的密钥来加密。

因为s3分为四种存储 , 其中常用的或者说默认的就是standard，也就是说有11个9的持久性，4个9的可用性，但是这里的RRS的持久性就没那么高了，甚至还可能丢失，所以常用于存储一些容易恢复不重要的数据。然后IA是存储性能稍差，适合存储一些不那么经常读取的数据，而Glacier则干脆是备份用的，就是基本不怎么读取的东西。那可能就会问了，那我还需要隔一段时间自己去转存么？刚开始是热数据，随时读写，过一段时间就是温数据，读写不那么多了，然后就是冷数据了，直接打入冷宫了。所以呢s3有个life management的功能，就是可以设置一个时间段，然后到了期限，比如说30天把温数据写到IA里面去，然后过个60天就转为备份，写到Glacier去了。这里要注意的是，standard的安全性，也就是说传输过程和存储中的数据加密是要自己开启的，但是glacier的加密是默认开启的。

1. standard
2. IA
3. Glacier
4. RRS

所以根据这几种分类，就有对应的功能比如存储各种数据，备份啊什么的。而且他还可以作为静态网页的容器，只要在创造bucket的时候开启静态网页的功能，就可以通过url访问了。

存储的就记到这里吧。